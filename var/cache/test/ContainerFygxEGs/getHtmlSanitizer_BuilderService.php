<?php

namespace ContainerFygxEGs;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getHtmlSanitizer_BuilderService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'html_sanitizer.builder' shared service.
     *
     * @return \HtmlSanitizer\SanitizerBuilder
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/tgalopin/html-sanitizer/src/SanitizerBuilderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/tgalopin/html-sanitizer/src/SanitizerBuilder.php';
        include_once \dirname(__DIR__, 4).'/vendor/tgalopin/html-sanitizer/src/Extension/ExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/tgalopin/html-sanitizer/src/Extension/Basic/BasicExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/tgalopin/html-sanitizer/src/Extension/Code/CodeExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/tgalopin/html-sanitizer/src/Extension/Image/ImageExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/tgalopin/html-sanitizer/src/Extension/Iframe/IframeExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/tgalopin/html-sanitizer/src/Extension/Listing/ListExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/tgalopin/html-sanitizer/src/Extension/Table/TableExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/tgalopin/html-sanitizer/src/Extension/Extra/ExtraExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/tgalopin/html-sanitizer/src/Extension/Details/DetailsExtension.php';

        $container->privates['html_sanitizer.builder'] = $instance = new \HtmlSanitizer\SanitizerBuilder();

        $instance->setLogger(($container->privates['monolog.logger.html-sanitizer'] ?? $container->load('getMonolog_Logger_HtmlsanitizerService')));
        $instance->registerExtension(($container->privates['html_sanitizer.extension.basic'] ?? ($container->privates['html_sanitizer.extension.basic'] = new \HtmlSanitizer\Extension\Basic\BasicExtension())));
        $instance->registerExtension(($container->privates['html_sanitizer.extension.code'] ?? ($container->privates['html_sanitizer.extension.code'] = new \HtmlSanitizer\Extension\Code\CodeExtension())));
        $instance->registerExtension(($container->privates['html_sanitizer.extension.image'] ?? ($container->privates['html_sanitizer.extension.image'] = new \HtmlSanitizer\Extension\Image\ImageExtension())));
        $instance->registerExtension(($container->privates['html_sanitizer.extension.iframe'] ?? ($container->privates['html_sanitizer.extension.iframe'] = new \HtmlSanitizer\Extension\Iframe\IframeExtension())));
        $instance->registerExtension(($container->privates['html_sanitizer.extension.list'] ?? ($container->privates['html_sanitizer.extension.list'] = new \HtmlSanitizer\Extension\Listing\ListExtension())));
        $instance->registerExtension(($container->privates['html_sanitizer.extension.table'] ?? ($container->privates['html_sanitizer.extension.table'] = new \HtmlSanitizer\Extension\Table\TableExtension())));
        $instance->registerExtension(($container->privates['html_sanitizer.extension.extra'] ?? ($container->privates['html_sanitizer.extension.extra'] = new \HtmlSanitizer\Extension\Extra\ExtraExtension())));
        $instance->registerExtension(($container->privates['html_sanitizer.extension.details'] ?? ($container->privates['html_sanitizer.extension.details'] = new \HtmlSanitizer\Extension\Details\DetailsExtension())));

        return $instance;
    }
}
